["[Handle(b) for b in case.bodies if \"handle\" in b.name.lower()]", "True", "def _get_value(case):\n    prismatic_connections = [c for c in case.connections if c.type == JointType.PRISMATIC]\n    fixed_connections = [c for c in case.connections if c.type == JointType.FIXED]\n    children_of_prismatic_connections = [c.child for c in prismatic_connections]\n    handles = [v for v in case.views if type(v) is Handle]\n    fixed_connections_with_handle_child = [fc for fc in fixed_connections if fc.child in [h.body for h in handles]]\n    drawer_containers = set(children_of_prismatic_connections).intersection(set([fc.parent for fc in fixed_connections_with_handle_child]))\n    return [Container(b) for b in drawer_containers]\n    ", "len([v for v in case.views if type(v) is Handle]) > 0", "def _get_value(case):\n    handles = [v for v in case.views if type(v) is Handle]\n    containers = [v for v in case.views if type(v) is Container]\n    fixed_connections = [c for c in case.connections if c.type == JointType.FIXED and c.parent in [cont.body for cont in containers] and c.child in [h.body for h in handles]]\n    prismatic_connections = [c for c in case.connections if c.type == JointType.PRISMATIC and c.child in [cont.body for cont in containers]]\n    drawer_handle_connections = [fc for fc in fixed_connections if fc.parent in [pc.child for pc in prismatic_connections]]\n    drawers = [Drawer([cont for cont in containers if dc.parent==cont.body][0], [h for h in handles if dc.child==h.body][0]) for dc in drawer_handle_connections]\n    return drawers\n    ", "len([v for v in case.views if type(v) is Handle]) > 0 and len([v for v in case.views if type(v) is Container]) > 0", "def _get_value(case):\n    drawers = [v for v in case.views if type(v) is Drawer]\n    prismatic_connections = [c for c in case.connections if c.type == JointType.PRISMATIC and c.child in [drawer.container.body for drawer in drawers]]\n    cabinet_container_bodies = [pc.parent for pc in prismatic_connections]\n    cabinet_containers = [d.container for d in drawers if d.container.body in cabinet_container_bodies]\n    cabinets = []\n    for cc in cabinet_containers:\n        if cc in [cabinet.container for cabinet in cabinets]:\n            continue\n        cc_prismatic_connections = [pc for pc in prismatic_connections if pc.parent is cc.body]\n        cabinet_drawer_container_bodies = [pc.child for pc in cc_prismatic_connections]\n        cabinet_drawers = [d for d in drawers if d.container.body in cabinet_drawer_container_bodies]\n        cabinets.append(Cabinet(cc, cabinet_drawers))\n        \n    return cabinets\n    ", "len([v for v in case.views if type(v) is Drawer]) > 0", null]